/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/mmljs/index.js":
/*!*************************************!*\
  !*** ./node_modules/mmljs/index.js ***!
  \*************************************/
/*! exports provided: C_BASE_KEY_INDEX, C_BASE_NOTE_INDEXES, SCALE, TOTAL_NUM_OF_KEYS, A_BASE_KEY_INDEX, A_BASE_FREQUENCY, QUARTER_NOTE, BASE_OCTAVE, MML */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"C_BASE_KEY_INDEX\", function() { return C_BASE_KEY_INDEX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"C_BASE_NOTE_INDEXES\", function() { return C_BASE_NOTE_INDEXES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCALE\", function() { return SCALE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TOTAL_NUM_OF_KEYS\", function() { return TOTAL_NUM_OF_KEYS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"A_BASE_KEY_INDEX\", function() { return A_BASE_KEY_INDEX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"A_BASE_FREQUENCY\", function() { return A_BASE_FREQUENCY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"QUARTER_NOTE\", function() { return QUARTER_NOTE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BASE_OCTAVE\", function() { return BASE_OCTAVE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MML\", function() { return MML; });\nconst C_BASE_KEY_INDEX = 39; // 0...n\nconst C_BASE_NOTE_INDEXES = { c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11 };\nconst SCALE = 12;\nconst TOTAL_NUM_OF_KEYS = 88;\nconst A_BASE_KEY_INDEX = 48; // 0...n\nconst A_BASE_FREQUENCY = 440;\nconst QUARTER_NOTE = 4;\nconst BASE_OCTAVE = 4;\nvar MML;\n(function (MML) {\n    let notes;\n    let audioContext;\n    let gain;\n    let filter;\n    let scheduleTime = 0.1;\n    let lookahead = 25;\n    let startTime = 0;\n    let sequences = [];\n    let playInterval;\n    let header;\n    MML.initialize = () => {\n        const AudioContext = window['AudioContext'] // Default\n            || window['webkitAudioContext'] // Safari and old versions of Chrome\n            || window['mozAudioContext']\n            || window['oAudioContext']\n            || window['msAudioContext']\n            || false;\n        audioContext = new AudioContext();\n        filter = audioContext.createBiquadFilter();\n        gain = audioContext.createGain();\n        filter.type = \"lowpass\";\n        filter.frequency.setValueAtTime(700, 0);\n        filter.connect(gain);\n        // gain.gain.setValueAtTime(0.5, 0);\n        gain.connect(audioContext.destination);\n        calculateNotes();\n    };\n    let calculateNotes = () => {\n        notes = [];\n        const keys = ['a', 'a+', 'b', 'c', 'c+', 'd', 'd+', 'e', 'f', 'f+', 'g', 'g+'];\n        const newOctaveIndex = 3;\n        let octave = 0;\n        let keyIndex = 0;\n        for (let n = 0; n < TOTAL_NUM_OF_KEYS; n++) {\n            let frequency = Math.pow(2, ((n - A_BASE_KEY_INDEX) / SCALE)) * A_BASE_FREQUENCY;\n            let key = keys[keyIndex];\n            let nextKey = (keyIndex + 1) % keys.length;\n            octave = octave + (keyIndex === newOctaveIndex ? 1 : 0);\n            let alt = key.slice(-1) === \"#\" ? keys[nextKey][0] + '-' : '';\n            notes.push({ index: n, key: key, octave: octave, alt: alt, frequency: frequency });\n            keyIndex = nextKey;\n        }\n    };\n    MML.getNotes = () => {\n        return notes;\n    };\n    MML.readMML = (mmlString) => {\n        const mmls = mmlString.toLowerCase().replace(/\\s/g, '').split(';');\n        let headerMML = '';\n        for (let i = mmls.length - 1; i >= 0; i--) {\n            let mml = mmls[i];\n            if (mml.includes('%')) {\n                headerMML = mmls.splice(i, 1)[0];\n                break;\n            }\n        }\n        header = new Sequence(headerMML);\n        header.parseMML();\n        mmls.map(mml => {\n            if (!mml)\n                return;\n            let sequence = new Sequence(mml);\n            sequences.push(sequence);\n        });\n        sequences.map(sequence => {\n            sequence.parseMML();\n        });\n    };\n    MML.writeToMML = () => {\n        return (header && header.writeToMML() || '').concat(sequences.map(sequence => {\n            return sequence.writeToMML();\n        }).join(\"\"));\n    };\n    MML.playMML = () => {\n        if (!startTime) {\n            startTime = audioContext.currentTime;\n        }\n        const relativeScheduleTime = audioContext.currentTime + scheduleTime;\n        header && header.playMML(startTime, relativeScheduleTime);\n        sequences.map(sequence => {\n            sequence.playMML(startTime, relativeScheduleTime);\n        });\n    };\n    MML.stop = () => {\n        clearInterval(playInterval);\n        gain.disconnect(audioContext.destination);\n        startTime = -1;\n        header && header.resetPlayState();\n        sequences.map(sequence => {\n            sequence.resetPlayState();\n        });\n        MML.initialize();\n    };\n    MML.play = () => {\n        MML.stop();\n        playInterval = window.setInterval(MML.playMML, lookahead);\n    };\n    MML.getDurationFromExtensions = (note) => {\n        if (!note.extensions)\n            return -1;\n        let duration = note.extensions[0];\n        note.extensions.slice(1).map(extension => {\n            duration = MML.Sequence.calculateDurationFromNewExtension(duration, extension);\n        });\n        return duration;\n    };\n    // 1bpm = 1s -> 1beat= 1/60s, 1beat = 4 defaultDuration\n    MML.convertDurationToSeconds = (note, tempo) => {\n        let duration = MML.getDurationFromExtensions(note);\n        if (duration === 0 || tempo === 0) {\n            return Number.MAX_VALUE;\n        }\n        return (QUARTER_NOTE / duration) * 60 / tempo;\n    };\n    MML.playNote = (note, tempo, scheduledStartTime) => {\n        if (!scheduledStartTime)\n            scheduledStartTime = audioContext.currentTime;\n        let oscillators = [];\n        let numberOfOscillators = 2;\n        for (let i = 0; i < numberOfOscillators; i++) {\n            const osc = audioContext.createOscillator();\n            osc.frequency.value = notes[note.index].frequency;\n            switch (i % 2) {\n                case 0:\n                    osc.type = 'sawtooth';\n                    osc.detune.value = -5;\n                    break;\n                case 1:\n                    osc.type = 'sine';\n                    osc.detune.value = 5;\n                    break;\n            }\n            osc.connect(filter);\n            osc.start(scheduledStartTime);\n            osc.stop(scheduledStartTime + MML.convertDurationToSeconds(note, tempo));\n            oscillators.push(osc);\n        }\n        return oscillators;\n    };\n    MML.getHeaderNotesInQueue = () => {\n        return header && header.notesInQueue;\n    };\n    MML.getNotesInQueue = () => {\n        return sequences.map(sequence => {\n            return sequence.notesInQueue;\n        });\n    };\n    class Sequence {\n        constructor(mml) {\n            this.tempo = 120;\n            this.octave = BASE_OCTAVE;\n            this.extensions = [QUARTER_NOTE];\n            this.defaultExtensions = [QUARTER_NOTE];\n            this.chordNoteIndexes = [];\n            this.readingChord = false;\n            this.mmlIndex = 0;\n            this.goToNext = false;\n            this.isHeader = false;\n            this.notesInQueue = [];\n            this.playState = {};\n            this.resetPlayState = () => {\n                this.playState = {\n                    index: 0,\n                    nextNoteTime: 0,\n                    chord: false,\n                    tempo: 120,\n                    startLoopIndex: -1,\n                    loopCount: -1,\n                    endLoopIndex: -1,\n                    infiniteLoopIndex: -1,\n                    loopNoteTime: 0,\n                    startLoopOffset: 0,\n                    endLoopOffset: 0,\n                };\n            };\n            this.expect = (reg) => {\n                if (!reg.test(this.mml[this.mmlIndex])) {\n                    throw new Error('Invalid MML syntax.\\n' +\n                        'Expected: ' + reg + ', Got: ' + this.mml[this.mmlIndex]);\n                }\n            };\n            this.isThisValid = (reg) => {\n                return this.goToNext = !!this.mml[this.mmlIndex] && !!this.mml[this.mmlIndex].trim() && reg.test(this.mml[this.mmlIndex]);\n            };\n            this.isNextValid = (reg) => {\n                this.mmlIndex++;\n                return this.isThisValid(reg);\n            };\n            this.getOctaveOffset = () => {\n                return (this.octave - BASE_OCTAVE) * SCALE;\n            };\n            this.readNextLength = () => {\n                let length = 0;\n                do {\n                    if (this.isThisValid(/\\d/)) {\n                        length = length * 10 + parseInt(this.mml[this.mmlIndex]);\n                    }\n                } while (this.isNextValid(/\\d/));\n                return length !== 0 ? [length] : this.defaultExtensions;\n            };\n            this.getDuration = () => {\n                this.expect(/[\\dl^.~]/);\n                this.extensions = this.defaultExtensions;\n                let changeDefaultDuration = false;\n                while (this.isThisValid(/[\\dl^.~]/)) {\n                    switch (this.mml[this.mmlIndex]) {\n                        case 'l':\n                            changeDefaultDuration = true;\n                            this.extensions = this.readNextLength();\n                            break;\n                        case '^':\n                            this.extensions = this.extensions.concat(this.readNextLength());\n                            break;\n                        case '.':\n                            do {\n                                let extension = this.extensions[this.extensions.length - 1] * 2;\n                                this.extensions.push(extension);\n                            } while (this.isNextValid(/\\./));\n                            break;\n                        case '~':\n                            this.extensions = this.extensions.concat(...new Array(this.readNextLength()[0]).fill(this.extensions[0]));\n                            break;\n                        default: {\n                            this.extensions = this.readNextLength();\n                            break;\n                        }\n                    }\n                }\n                if (changeDefaultDuration) {\n                    this.defaultExtensions = this.extensions;\n                    this.notesInQueue.push({\n                        type: \"default-duration\",\n                        extensions: this.defaultExtensions\n                    });\n                }\n            };\n            this.saveNote = (noteIndex) => {\n                this.notesInQueue.push({\n                    type: 'note',\n                    index: noteIndex,\n                    extensions: this.extensions,\n                });\n            };\n            this.nextNote = () => {\n                this.extensions = this.defaultExtensions;\n            };\n            this.getNote = () => {\n                this.expect(/[cdefgab]/);\n                let noteIndex = C_BASE_NOTE_INDEXES[this.mml[this.mmlIndex]] + C_BASE_KEY_INDEX + this.getOctaveOffset();\n                if (this.isNextValid(/[-+#\\d^.]/)) {\n                    switch (this.mml[this.mmlIndex]) {\n                        case '-':\n                            noteIndex--;\n                            break;\n                        case '+':\n                        case '#':\n                            noteIndex++;\n                            break;\n                        default:\n                            if (this.readingChord) {\n                                break;\n                            }\n                            this.getDuration();\n                            break;\n                    }\n                }\n                if (this.readingChord) {\n                    this.chordNoteIndexes.push(noteIndex);\n                    return;\n                }\n                this.saveNote(noteIndex);\n            };\n            this.getOctave = () => {\n                this.expect(/o/);\n                if (this.isNextValid(/\\d/)) {\n                    this.octave = parseInt(this.mml[this.mmlIndex]);\n                    this.notesInQueue.push({ type: \"octave\", octave: this.octave });\n                }\n            };\n            this.decreaseOctave = () => {\n                this.expect(/>/);\n                if (this.isNextValid(/\\d/)) {\n                    this.octave -= parseInt(this.mml[this.mmlIndex]);\n                }\n                else {\n                    this.octave--;\n                }\n                this.notesInQueue.push({ type: \"octave\", octave: this.octave });\n            };\n            this.increaseOctave = () => {\n                this.expect(/</);\n                if (this.isNextValid(/\\d/)) {\n                    this.octave += parseInt(this.mml[this.mmlIndex]);\n                }\n                else {\n                    this.octave++;\n                }\n                this.notesInQueue.push({ type: \"octave\", octave: this.octave });\n            };\n            this.getTempo = () => {\n                this.expect(/t/);\n                let newTempo = 0;\n                while (this.isNextValid(/\\d/)) {\n                    newTempo = newTempo * 10 + parseInt(this.mml[this.mmlIndex]);\n                }\n                this.tempo = newTempo;\n                this.notesInQueue.push({ type: \"tempo\", tempo: this.tempo });\n            };\n            this.getRest = () => {\n                this.expect(/r/);\n                if (this.isNextValid(/[\\d^.]/)) {\n                    this.getDuration();\n                }\n                this.notesInQueue.push({\n                    type: 'rest',\n                    extensions: this.extensions,\n                });\n            };\n            this.getChord = () => {\n                this.expect(/\\[/);\n                this.readingChord = true;\n                this.chordNoteIndexes = [];\n                this.notesInQueue.push({ type: 'start-chord' });\n            };\n            this.playChord = () => {\n                this.expect(/]/);\n                if (this.isNextValid(/[\\d^.]/)) {\n                    this.getDuration();\n                }\n                this.chordNoteIndexes.map(noteIndex => {\n                    this.saveNote(noteIndex);\n                });\n                this.readingChord = false;\n                this.chordNoteIndexes = [];\n                this.notesInQueue.push({\n                    type: 'end-chord',\n                    extensions: this.extensions,\n                });\n            };\n            this.setInfiniteLoop = () => {\n                this.expect(/$/);\n                this.mmlIndex++;\n                this.notesInQueue.push({ type: 'infinite-loop' });\n            };\n            this.startLoop = () => {\n                this.expect(/\\//);\n                this.mmlIndex++;\n                this.expect(/:/);\n                this.mmlIndex++;\n                this.notesInQueue.push({ type: 'start-loop' });\n            };\n            this.endLoop = () => {\n                this.expect(/:/);\n                this.mmlIndex++;\n                this.expect(/\\//);\n                let loopTimes = 0;\n                while (this.isNextValid(/\\d/)) {\n                    loopTimes = loopTimes * 10 + parseInt(this.mml[this.mmlIndex]);\n                }\n                if (loopTimes === 0) {\n                    loopTimes = 2;\n                }\n                this.notesInQueue.push({ type: 'end-loop', times: loopTimes });\n            };\n            this.breakLoop = () => {\n                this.expect(/\\|/);\n                this.notesInQueue.push({ type: 'break-loop' });\n            };\n            this.setHeader = () => {\n                this.expect(/%/);\n                this.notesInQueue.push({ type: 'header' });\n                this.isHeader = true;\n            };\n            this.parseMML = () => {\n                while (this.mmlIndex < this.mml.length) {\n                    const prevMMLIndex = this.mmlIndex;\n                    this.nextNote();\n                    switch (this.mml[this.mmlIndex]) {\n                        case 'c':\n                        case 'd':\n                        case 'e':\n                        case 'f':\n                        case 'g':\n                        case 'a':\n                        case 'b':\n                            this.getNote();\n                            break;\n                        case '[':\n                            this.getChord();\n                            break;\n                        case ']':\n                            this.playChord();\n                            break;\n                        case 'r':\n                            this.getRest();\n                            break;\n                        case 'l':\n                            this.getDuration();\n                            break;\n                        case 'o':\n                            this.getOctave();\n                            break;\n                        case '>':\n                            this.decreaseOctave();\n                            break;\n                        case '<':\n                            this.increaseOctave();\n                            break;\n                        case 't':\n                            this.getTempo();\n                            break;\n                        case '$':\n                            this.setInfiniteLoop();\n                            break;\n                        case '/':\n                            this.startLoop();\n                            break;\n                        case ':':\n                            this.endLoop();\n                            break;\n                        case '|':\n                            this.breakLoop();\n                            break;\n                        case '%':\n                            this.setHeader();\n                            break;\n                        default:\n                            this.goToNext = true;\n                            break;\n                    }\n                    if (this.goToNext || prevMMLIndex === this.mmlIndex) {\n                        this.mmlIndex++;\n                        this.goToNext = false;\n                    }\n                }\n            };\n            this.playMML = (relativeStartTime, relativeScheduleTime) => {\n                while (this.playState.nextNoteTime < relativeScheduleTime\n                    && (this.isHeader || !header || this.playState.nextNoteTime < header.playState.nextNoteTime)\n                    && this.playState.index < this.notesInQueue.length) {\n                    if (!this.isHeader && header) {\n                        this.playState.tempo = header.tempo;\n                        if (header.playState.startLoopIndex >= 0 && this.playState.startLoopIndex < 0) {\n                            this.playState.startLoopIndex = this.playState.index;\n                            this.playState.startLoopOffset = header.playState.loopNoteTime - this.playState.nextNoteTime;\n                            if (this.playState.startLoopOffset < 0)\n                                this.playState.startLoopOffset = 0;\n                        }\n                        else if (header.playState.endLoopIndex >= 0 && this.playState.endLoopIndex < 0) {\n                            this.playState.endLoopIndex = this.playState.index;\n                            this.playState.endLoopOffset = header.playState.loopNoteTime - this.playState.nextNoteTime;\n                            if (this.playState.endLoopOffset < 0)\n                                this.playState.endLoopOffset = 0;\n                            this.playState.loopCount = header.playState.loopCount;\n                            this.playState.index = this.playState.startLoopIndex;\n                            this.playState.nextNoteTime += this.playState.startLoopOffset;\n                        }\n                        else if (header.playState.loopCount !== this.playState.loopCount) {\n                            if (header.playState.loopCount < 0) {\n                                this.playState.index = this.playState.endLoopIndex;\n                                this.playState.nextNoteTime += this.playState.endLoopOffset;\n                                this.playState.loopCount = -1;\n                                this.playState.startLoopIndex = -1;\n                                this.playState.endLoopIndex = -1;\n                            }\n                            else {\n                                this.playState.index = this.playState.startLoopIndex;\n                                this.playState.nextNoteTime += this.playState.startLoopOffset;\n                                this.playState.loopCount = header.playState.loopCount;\n                            }\n                        }\n                    }\n                    let prevPlayState = this.playState;\n                    this.playState = Object.assign({}, this.playState);\n                    const note = this.notesInQueue[this.playState.index];\n                    switch (note.type) {\n                        case 'start-loop':\n                            this.playState.startLoopIndex = this.playState.index;\n                            this.playState.loopNoteTime = this.playState.nextNoteTime;\n                            break;\n                        case 'end-loop':\n                            if (this.playState.loopCount < 0) {\n                                this.playState.endLoopIndex = this.playState.index;\n                                this.playState.loopCount = note.times;\n                                this.playState.loopNoteTime = this.playState.nextNoteTime;\n                            }\n                            this.playState.loopCount--;\n                            if (this.playState.loopCount > 0) {\n                                this.playState.index = this.playState.startLoopIndex;\n                            }\n                            else {\n                                this.playState.loopCount = -1;\n                                this.playState.startLoopIndex = -1;\n                                this.playState.endLoopIndex = -1;\n                            }\n                            break;\n                        case 'break-loop':\n                            if (this.playState.loopCount === 1) {\n                                this.playState.index = this.playState.endLoopIndex;\n                                this.playState.loopCount = -1;\n                                this.playState.startLoopIndex = -1;\n                                this.playState.endLoopIndex = -1;\n                            }\n                            break;\n                        case 'infinite-loop':\n                            this.playState.infiniteLoopIndex = this.playState.index;\n                            break;\n                        case 'tempo':\n                            this.playState.tempo = note.tempo;\n                            break;\n                        case 'start-chord':\n                            this.playState.chord = true;\n                            break;\n                        case 'end-chord':\n                            this.playState.chord = false;\n                            this.playState.nextNoteTime += MML.convertDurationToSeconds(note, this.playState.tempo);\n                            break;\n                        case 'rest':\n                            this.playState.nextNoteTime += MML.convertDurationToSeconds(note, this.playState.tempo);\n                            break;\n                        case 'note':\n                            MML.playNote(note, this.playState.tempo, relativeStartTime + this.playState.nextNoteTime);\n                            if (this.playState.chord)\n                                break;\n                            this.playState.nextNoteTime += MML.convertDurationToSeconds(note, this.playState.tempo);\n                            break;\n                    }\n                    if (this.playState.infiniteLoopIndex >= 0 && this.playState.index >= this.notesInQueue.length - 1) {\n                        this.playState.index = this.playState.infiniteLoopIndex;\n                    }\n                    this.playState.index++;\n                    if (this.isHeader && prevPlayState.nextNoteTime !== this.playState.nextNoteTime)\n                        break;\n                }\n            };\n            this.stringifyNoteKey = (note) => {\n                return notes[note.index].key;\n            };\n            this.stringifyNoteDuration = (note, defaultExtension) => {\n                let mmlDuration = \"\";\n                let prevExtension = note.extensions[0];\n                let occurrences = 1;\n                mmlDuration += note.extensions.join('') === defaultExtension.join('') ? \"\" : prevExtension;\n                note.extensions.slice(1).map((extension) => {\n                    if (prevExtension === extension) {\n                        if (occurrences === 1) {\n                            mmlDuration += '~';\n                        }\n                        occurrences++;\n                    }\n                    else {\n                        if (occurrences > 1) {\n                            mmlDuration += occurrences;\n                            occurrences = 1;\n                        }\n                        if (prevExtension === (extension / 2)) {\n                            mmlDuration += '.';\n                        }\n                        else {\n                            mmlDuration += '^' + extension;\n                        }\n                    }\n                    prevExtension = extension;\n                });\n                if (occurrences > 1)\n                    mmlDuration += occurrences;\n                return mmlDuration;\n            };\n            this.writeToMML = () => {\n                let mmlText = \"\";\n                let defaultExtensions = [QUARTER_NOTE];\n                this.notesInQueue.map(note => {\n                    switch (note.type) {\n                        case \"infinite-loop\":\n                            mmlText += \"$\";\n                            break;\n                        case \"octave\":\n                            mmlText += \"o\" + note.octave;\n                            break;\n                        case \"tempo\":\n                            mmlText += \"t\" + note.tempo;\n                            break;\n                        case \"default-duration\":\n                            mmlText += \"l\" + this.stringifyNoteDuration(note, []);\n                            defaultExtensions = note.extensions;\n                            break;\n                        case \"start-loop\":\n                            mmlText += \"/:\";\n                            break;\n                        case \"end-loop\":\n                            mmlText += \":/\" + note.times;\n                            break;\n                        case \"break-loop\":\n                            mmlText += \"|\";\n                            break;\n                        case \"header\":\n                            mmlText += \"%\";\n                            break;\n                        case \"start-chord\":\n                            mmlText += \"[\";\n                            break;\n                        case \"end-chord\":\n                            mmlText += \"]\" + this.stringifyNoteDuration(note, defaultExtensions);\n                            break;\n                        case \"rest\":\n                            mmlText += \"r\" + this.stringifyNoteDuration(note, defaultExtensions);\n                            break;\n                        case \"note\":\n                            mmlText += this.stringifyNoteKey(note) + this.stringifyNoteDuration(note, defaultExtensions);\n                            break;\n                    }\n                });\n                mmlText += \";\";\n                return mmlText;\n            };\n            this.mml = mml;\n            if (header) {\n                this.tempo = header.tempo;\n                this.defaultExtensions = header.defaultExtensions;\n                this.extensions = header.extensions;\n            }\n            this.resetPlayState();\n        }\n    }\n    Sequence.calculateDurationFromNewExtension = (duration, extension) => {\n        return (duration * extension) / (duration + extension);\n    };\n    MML.Sequence = Sequence;\n})(MML || (MML = {}));\n\n\n//# sourceURL=webpack:///./node_modules/mmljs/index.js?");

/***/ }),

/***/ "./node_modules/muvjs/muv-dom.mjs":
/*!****************************************!*\
  !*** ./node_modules/muvjs/muv-dom.mjs ***!
  \****************************************/
/*! exports provided: isNull, isArray, component, rerender, div, button, label, input, textarea, ul, li, img, a, abbr, address, area, article, aside, audio, b, base, bdo, blockquote, body, br, canvas, caption, cite, code, col, colgroup, datalist, dd, del, details, dfn, dialog, dl, dt, em, embed, fieldset, figcaption, figure, footer, form, head, header, h1, h2, h3, h4, h5, h6, hr, html, i, iframe, ins, kbd, legend, link, map, mark, menu, meta, meter, nav, object, ol, optgroup, option, output, p, param, pre, progress, q, s, samp, script, section, select, small, source, span, strong, style, sub, summary, sup, table, tbody, td, tfoot, th, thead, tr, time, title, track, u, varElement, video */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNull\", function() { return isNull; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArray\", function() { return isArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"component\", function() { return component; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rerender\", function() { return rerender; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"div\", function() { return div; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"button\", function() { return button; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"label\", function() { return label; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"input\", function() { return input; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"textarea\", function() { return textarea; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ul\", function() { return ul; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"li\", function() { return li; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"img\", function() { return img; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return a; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"abbr\", function() { return abbr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"address\", function() { return address; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"area\", function() { return area; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"article\", function() { return article; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"aside\", function() { return aside; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"audio\", function() { return audio; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return b; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"base\", function() { return base; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bdo\", function() { return bdo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"blockquote\", function() { return blockquote; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"body\", function() { return body; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"br\", function() { return br; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"canvas\", function() { return canvas; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"caption\", function() { return caption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cite\", function() { return cite; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"code\", function() { return code; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"col\", function() { return col; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colgroup\", function() { return colgroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"datalist\", function() { return datalist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dd\", function() { return dd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"del\", function() { return del; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"details\", function() { return details; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dfn\", function() { return dfn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dialog\", function() { return dialog; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dl\", function() { return dl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dt\", function() { return dt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"em\", function() { return em; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"embed\", function() { return embed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fieldset\", function() { return fieldset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"figcaption\", function() { return figcaption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"figure\", function() { return figure; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"footer\", function() { return footer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"form\", function() { return form; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"head\", function() { return head; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"header\", function() { return header; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h1\", function() { return h1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h2\", function() { return h2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h3\", function() { return h3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h4\", function() { return h4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h5\", function() { return h5; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h6\", function() { return h6; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hr\", function() { return hr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"html\", function() { return html; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return i; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iframe\", function() { return iframe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ins\", function() { return ins; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"kbd\", function() { return kbd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"legend\", function() { return legend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"link\", function() { return link; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"map\", function() { return map; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mark\", function() { return mark; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"menu\", function() { return menu; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"meta\", function() { return meta; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"meter\", function() { return meter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nav\", function() { return nav; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"object\", function() { return object; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ol\", function() { return ol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"optgroup\", function() { return optgroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"option\", function() { return option; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"output\", function() { return output; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return p; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"param\", function() { return param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pre\", function() { return pre; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"progress\", function() { return progress; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return q; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return s; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"samp\", function() { return samp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"script\", function() { return script; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"section\", function() { return section; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"select\", function() { return select; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"small\", function() { return small; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"source\", function() { return source; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"span\", function() { return span; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"strong\", function() { return strong; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"style\", function() { return style; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sub\", function() { return sub; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"summary\", function() { return summary; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sup\", function() { return sup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"table\", function() { return table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tbody\", function() { return tbody; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"td\", function() { return td; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tfoot\", function() { return tfoot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"th\", function() { return th; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"thead\", function() { return thead; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tr\", function() { return tr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"time\", function() { return time; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"title\", function() { return title; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"track\", function() { return track; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return u; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"varElement\", function() { return varElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"video\", function() { return video; });\n\n\nconst isNull = (value) => value === undefined || value === null;\nconst isArray = (a) => !isNull(a) && a instanceof Array;\n\nconst setAttributes = element => attributes => {\n  if (isNull(attributes)) return;\n\n  for (let attr in attributes) {\n    if (typeof attributes[attr] === \"function\") {\n      element[attr] = attributes[attr];\n    } else {\n      element.setAttribute(attr, attributes[attr]);\n    }\n  }\n};\n\nconst appendChildren = element => child => index => {\n  if (isNull(child)) return;\n\n  if (typeof child === \"object\") {\n    if (isArray(child)) {\n      child.map((c, i) => appendChildren(element)(c)(i))\n    } else {\n      element.appendChild(child.render(element.getAttribute(\"key\") || \"\", index));\n    }\n  } else {\n    element.innerText = child;\n  }\n};\n\nconst component = elementType => attributes => (...children) => {\n  return {\n    elementType: elementType,\n    attributes: attributes,\n    children: children.flat(),\n    genKey: function (parentKey, index) {\n      const geneKey = parentKey ? `${parentKey}-${index}-` : \"\";\n      this.attributes = this.attributes || {};\n      this.attributes[\"key\"] = geneKey + elementType;\n    },\n    render: function (parentKey, index) {\n      let element = document.createElement(elementType);\n\n      this.genKey(parentKey, index);\n      setAttributes(element)(this.attributes);\n\n      appendChildren(element)(this.children)(0);\n\n      return element;\n    }\n  };\n};\n\nconst rerender = parent => oldView => newView => index => {\n\n  if (!parent) return;\n\n  if (typeof oldView !== \"object\" && typeof newView !== \"object\") {\n    if (oldView !== newView) {\n      parent.innerText = newView;\n      parent.value = newView;\n    }\n    return;\n  }\n\n  if (isNull(newView)) {\n    if (!isNull(parent.children[index])) parent.removeChild(parent.children[index]);\n    return;\n  }\n\n  if (isNull(oldView) && newView.render) {\n    parent.appendChild(newView.render(parent.getAttribute(\"key\") || \"\", index));\n    return;\n  }\n\n  if ((!newView.attributes || !newView.attributes[\"key\"]) && newView.genKey) {\n    newView.genKey(parent.getAttribute(\"key\") || \"\", index)\n  }\n\n\n  if (oldView.elementType === newView.elementType && oldView.attributes[\"key\"] === newView.attributes[\"key\"]) {\n\n    if (JSON.stringify(oldView.attributes) !== JSON.stringify(newView.attributes)) {\n      let element = parent.children[index] || parent;\n      for (let attr in {...oldView.attributes, ...newView.attributes}) {\n        if (oldView.attributes[attr] !== newView.attributes[attr]) {\n          if (typeof newView.attributes[attr] === \"function\") {\n            element[attr] = newView.attributes[attr];\n          } else {\n            element.setAttribute(attr, newView.attributes[attr]);\n          }\n        }\n      }\n    }\n\n    const newChildren = newView.children;\n    const oldChildren = oldView.children;\n\n    const childrenNum = newChildren.length >= oldChildren.length ? newChildren.length : oldChildren.length;\n    for (let i = 0; i < childrenNum; i++) {\n      rerender(parent.children[index])(oldChildren[i])(newChildren[i])(i)\n    }\n\n  } else {\n    parent.insertBefore(newView.render(parent.getAttribute(\"key\") || \"\", index), parent.children[index]);\n    parent.removeChild(parent.children[index + 1])\n  }\n};\n\nconst div = component('div');\nconst button = component('button');\nconst label = component('label');\nconst input = component('input');\nconst textarea = component('textarea');\nconst ul = component('ul');\nconst li = component('li');\nconst img = component('img');\nconst a = component('a');\nconst abbr = component('abbr');\nconst address = component('address');\nconst area = component('area');\nconst article = component('article');\nconst aside = component('aside');\nconst audio = component('audio');\nconst b = component('b');\nconst base = component('base');\nconst bdo = component('bdo');\nconst blockquote = component('blockquote');\nconst body = component('body');\nconst br = component('br');\nconst canvas = component('canvas');\nconst caption = component('caption');\nconst cite = component('cite');\nconst code = component('code');\nconst col = component('col');\nconst colgroup = component('colgroup');\nconst datalist = component('datalist');\nconst dd = component('dd');\nconst del = component('del');\nconst details = component('details');\nconst dfn = component('dfn');\nconst dialog = component('dialog');\nconst dl = component('dl');\nconst dt = component('dt');\nconst em = component('em');\nconst embed = component('embed');\nconst fieldset = component('fieldset');\nconst figcaption = component('figcaption');\nconst figure = component('figure');\nconst footer = component('footer');\nconst form = component('form');\nconst head = component('head');\nconst header = component('header');\nconst h1 = component('h1');\nconst h2 = component('h2');\nconst h3 = component('h3');\nconst h4 = component('h4');\nconst h5 = component('h5');\nconst h6 = component('h6');\nconst hr = component('hr');\nconst html = component('html');\nconst i = component('i');\nconst iframe = component('iframe');\nconst ins = component('ins');\nconst kbd = component('kbd');\nconst legend = component('legend');\nconst link = component('link');\nconst map = component('map');\nconst mark = component('mark');\nconst menu = component('menu');\nconst meta = component('meta');\nconst meter = component('meter');\nconst nav = component('nav');\nconst object = component('object');\nconst ol = component('ol');\nconst optgroup = component('optgroup');\nconst option = component('option');\nconst output = component('output');\nconst p = component('p');\nconst param = component('param');\nconst pre = component('pre');\nconst progress = component('progress');\nconst q = component('q');\nconst s = component('s');\nconst samp = component('samp');\nconst script = component('script');\nconst section = component('section');\nconst select = component('select');\nconst small = component('small');\nconst source = component('source');\nconst span = component('span');\nconst strong = component('strong');\nconst style = component('style');\nconst sub = component('sub');\nconst summary = component('summary');\nconst sup = component('sup');\nconst table = component('table');\nconst tbody = component('tbody');\nconst td = component('td');\nconst tfoot = component('tfoot');\nconst th = component('th');\nconst thead = component('thead');\nconst tr = component('tr');\nconst time = component('time');\nconst title = component('title');\nconst track = component('track');\nconst u = component('u');\nconst varElement = component('var');\nconst video = component('video');\n\n\n//# sourceURL=webpack:///./node_modules/muvjs/muv-dom.mjs?");

/***/ }),

/***/ "./node_modules/muvjs/muv.mjs":
/*!************************************!*\
  !*** ./node_modules/muvjs/muv.mjs ***!
  \************************************/
/*! exports provided: muv */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"muv\", function() { return muv; });\n/* harmony import */ var _muv_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./muv-dom */ \"./node_modules/muvjs/muv-dom.mjs\");\n\n\n\nconst handleEffects = subscriptions => effects => {\n  if (!effects) return;\n  effects.map(effect => {\n    subscriptions(effect);\n  })\n};\n\n\nconst muv = ({model, update, view, ignition, subscriptions}) => rootId => {\n  let root = document.getElementById(rootId);\n  if (!root) return;\n\n  let oldView;\n  let subs;\n\n  const dispatch = action => {\n    const updated = update(model)(action);\n    model = updated.model;\n    if (updated.effects) handleEffects(subs)(updated.effects);\n\n    const newView = view(dispatch)(model);\n    Object(_muv_dom__WEBPACK_IMPORTED_MODULE_0__[\"rerender\"])(root)(oldView)(newView)(0);\n    oldView = newView;\n  };\n\n  root.innerHTML = \"\";\n  oldView = view(dispatch)(model);\n  root.appendChild(oldView.render());\n\n  if (subscriptions) subs = subscriptions(dispatch);\n  if (ignition) ignition(dispatch)\n};\n\n\n//# sourceURL=webpack:///./node_modules/muvjs/muv.mjs?");

/***/ }),

/***/ "./src/App.ts":
/*!********************!*\
  !*** ./src/App.ts ***!
  \********************/
/*! exports provided: model, changeMMLText, update, view */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"model\", function() { return model; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"changeMMLText\", function() { return changeMMLText; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"update\", function() { return update; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"view\", function() { return view; });\n/* harmony import */ var muvjs_muv_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! muvjs/muv-dom */ \"./node_modules/muvjs/muv-dom.mjs\");\n/* harmony import */ var mmljs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mmljs */ \"./node_modules/mmljs/index.js\");\n/* harmony import */ var _mml_files_compressed__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mml-files/compressed */ \"./src/mml-files/compressed.ts\");\n// MODEL\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\nmmljs__WEBPACK_IMPORTED_MODULE_1__[\"MML\"].initialize();\nvar allText = _mml_files_compressed__WEBPACK_IMPORTED_MODULE_2__[\"Compressed\"].mml;\nmmljs__WEBPACK_IMPORTED_MODULE_1__[\"MML\"].readMML(allText.replace(/[\\n ]/g, ''));\nvar mml = mmljs__WEBPACK_IMPORTED_MODULE_1__[\"MML\"].writeToMML();\nvar model = {\n    mml: allText\n};\nvar changeMMLText = function (text) {\n    return {\n        type: \"change-mml-text\",\n        text: text\n    };\n};\nvar update = function (model) { return function (action) {\n    switch (action.type) {\n        case \"change-mml-text\":\n            model = __assign({}, model);\n            model.mml = action.text;\n            break;\n    }\n    return { model: model };\n}; };\nvar view = function (dispatch) { return function (model) {\n    var dispatcher = {\n        changeMMLText: function (e) {\n            var text = e && e.target && e.target.value || \"\";\n            dispatch(changeMMLText(text));\n        }\n    };\n    return (Object(muvjs_muv_dom__WEBPACK_IMPORTED_MODULE_0__[\"div\"])()([Object(muvjs_muv_dom__WEBPACK_IMPORTED_MODULE_0__[\"div\"])()('high'),\n        Object(muvjs_muv_dom__WEBPACK_IMPORTED_MODULE_0__[\"textarea\"])({ oninput: dispatcher.changeMMLText })(model.mml),\n        Object(muvjs_muv_dom__WEBPACK_IMPORTED_MODULE_0__[\"button\"])()('Play')\n    ]));\n}; };\n\n\n//# sourceURL=webpack:///./src/App.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _App__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./App */ \"./src/App.ts\");\n/* harmony import */ var muvjs_muv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! muvjs/muv */ \"./node_modules/muvjs/muv.mjs\");\n\n\nObject(muvjs_muv__WEBPACK_IMPORTED_MODULE_1__[\"muv\"])({ model: _App__WEBPACK_IMPORTED_MODULE_0__[\"model\"], update: _App__WEBPACK_IMPORTED_MODULE_0__[\"update\"], view: _App__WEBPACK_IMPORTED_MODULE_0__[\"view\"] });\n\n\n//# sourceURL=webpack:///./src/index.ts?");

/***/ }),

/***/ "./src/mml-files/compressed.ts":
/*!*************************************!*\
  !*** ./src/mml-files/compressed.ts ***!
  \*************************************/
/*! exports provided: Compressed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Compressed\", function() { return Compressed; });\nvar Compressed = {\n    mml: '' +\n        '% $ t120 l4 r1~4;\\n' +\n        'o3 a2    ;\\n' +\n        'o3 r~2 b2;' +\n        ''\n};\n\n\n//# sourceURL=webpack:///./src/mml-files/compressed.ts?");

/***/ })

/******/ });